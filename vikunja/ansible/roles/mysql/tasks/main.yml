---
- name: Install mysql-server
  apt:
    name: "mysql-server"
    state: present
    update_cache: true

- name: Deploy custom my.cnf
  template:
    src: "my.cnf.j2"
    dest: "/etc/mysql/my.cnf"
    owner: "root"
    group: "root"
    mode: 0600
  notify: "Restart mysql"

- name: Install python3-pip and python3-dev
  package:
    name: "{{ item }}"
  loop:
    - python3-pip
    - python3-dev
    - python3-pymysql # From ubuntu noble 24.04

# History : was working with Jammy 22.04
# - name: Make sure pymysql is present
#   pip:
#     name: pymysql
#     state: present
#     executable: /usr/bin/pip3

- name: Sets the root password
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Removes all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Removes the MySQL test database
  mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Ensure application database exists
  mysql_db:
    name: "{{ database_name }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: create user for application database with authorisation when login from particular host (api servers)
  mysql_user:
    name: "{{ database_name }}"
    password: "{{ database_name }}"
    priv: "*.*:ALL"
    host: "{{ hostvars[item].private_dns_name }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
  loop: "{{ groups['_Role_api'] }}"

# Needed with Noble
- name: restart mysql service
  ansible.builtin.systemd_service:
    state: restarted
    enabled: true
    name: "mysql"